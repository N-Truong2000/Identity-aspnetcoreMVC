@model SignupViewModel
@{
    ViewData["Title"] = "signup";
    var roles = new List<string> { "Member", "Admin" };
}

<h1>Signup</h1>

<form asp-controller="Identity" asp-action="Signup" method="post">
    <div class="form-group col-4">
        <label asp-for="Email">Email:</label>
        <input type-="text" asp-for="Email" class="form-control" />
    </div>
    @* @Html.ValidationMessageFor(model => model.Email, "", new { @class = "field-validation-error" }) *@

    <div class="form-group col-4">
        <label asp-for="Password">Password:</label>
        <input type-="text" asp-for="Password" class="form-control" />
    </div>
    <div class="form-group col-4">
        <label asp-for="Department">Department:</label>
        <input type-="text" asp-for="Department" class="form-control" />
    </div>
    @* @Html.ValidationMessageFor(model => model.Password, "", new { @class = "field-validation-error" }) *@
    <div class="form-group col-4">
        @Html.DropDownListFor(x => x.Role, roles.Select(s => new SelectListItem { Text = s, Value = s }), "Member", null)
    </div>
    <div>
        <button type="submit" class="btn btn-primary">Signup!</button>
    </div>
    <div>
        @Html.ValidationSummary(false, "", new { @class = "field-validation-error" })
    </div>
</form>

<div class="alert alert-info">
    If you already have an account, pelase <a asp-action="Signin">sign in</a>
</div>

<script src="@Url.Content("~/js/site.js")"></script> 